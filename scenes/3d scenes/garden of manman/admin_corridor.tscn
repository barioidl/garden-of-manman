[gd_scene load_steps=44 format=3 uid="uid://d0udp2unv4vl3"]

[ext_resource type="Script" path="res://scripts/visual/render bounds.gd" id="1_qhpbv"]
[ext_resource type="PackedScene" uid="uid://dxoq1or5n41wx" path="res://scenes/3d scenes/facility/drop door.tscn" id="2_doa65"]
[ext_resource type="ArrayMesh" uid="uid://cin4pjilbg7yi" path="res://assets/borga map/admin.obj" id="3_5sss3"]
[ext_resource type="Texture2D" uid="uid://b1opcmsabq03d" path="res://assets/little-martian, retro-texture-pack-v9/png/RIVET_1C.png" id="3_d5vtv"]
[ext_resource type="Texture2D" uid="uid://wflqs8sf6oau" path="res://assets/little-martian, retro-texture-pack-v9/png/SUPPORT_1D.png" id="3_kkhrq"]
[ext_resource type="Texture2D" uid="uid://b5rc2v3ftlb1t" path="res://assets/Textures/LAMP0000.png" id="4_1mls3"]
[ext_resource type="Texture2D" uid="uid://cg7uxb53ceo7a" path="res://assets/little-martian, retro-texture-pack-v9/png/SUPPORT_2A.png" id="4_ysw5a"]
[ext_resource type="Texture2D" uid="uid://y40665qjup2a" path="res://assets/flakdeau19,256x256 Pixel Textures/256x256/256_Tiles Circle 08.png" id="5_el5a3"]
[ext_resource type="Script" path="res://scripts/visual/3d_billboard_sprite.gd" id="5_um2we"]
[ext_resource type="Texture2D" uid="uid://bjwbbyf0cv8hj" path="res://assets/flakdeau19,256x256 Pixel Textures/256x256/256_Tiles Circle 09.png" id="6_07u6a"]
[ext_resource type="Texture2D" uid="uid://bq2sp6vl7tg4y" path="res://assets/Textures/LAMP0002.png" id="6_cqxrc"]
[ext_resource type="Texture2D" uid="uid://b0c7mlokxxaux" path="res://assets/Textures/LAMP0005.png" id="7_wonvn"]
[ext_resource type="Texture2D" uid="uid://7rh8725y7m5c" path="res://assets/Textures/LAMP0001.png" id="8_srpaq"]
[ext_resource type="Texture2D" uid="uid://bc8hulkev62uq" path="res://assets/Textures/LAMP0003.png" id="9_02hnk"]
[ext_resource type="Script" path="res://scripts/visual/bill_board_sides.gd" id="10_tmvwi"]
[ext_resource type="Texture2D" uid="uid://b4v0uli35d3t3" path="res://assets/Textures/LAMP0004.png" id="11_1srnj"]
[ext_resource type="ArrayMesh" uid="uid://dtjsaw20hluo0" path="res://assets/borga map/admin hole.obj" id="13_0177v"]
[ext_resource type="ArrayMesh" uid="uid://b1f7erti8b3jw" path="res://assets/borga map/admin platform.obj" id="13_nu7xd"]
[ext_resource type="ArrayMesh" uid="uid://dfkdwjbmgon5o" path="res://assets/borga map/admin platform 2.obj" id="15_xkrp4"]
[ext_resource type="Texture2D" uid="uid://b7ixdkuytykwi" path="res://assets/kenney/kenney_ui-pack/PNG/grey_panel.png" id="16_w5hai"]
[ext_resource type="Texture2D" uid="uid://bk1ti2yenwp02" path="res://assets/flakdeau19, Pixel Art Texture Pack/Pixel Art Texture Pack/Metal/s2 Metal Grid 3.png" id="17_gt40s"]
[ext_resource type="Texture2D" uid="uid://bku5j3m72jts1" path="res://assets/flakdeau19, Pixel Art Texture Pack/Pixel Art Texture Pack/Metal/s2 Metal Grid 3 box.png" id="18_eifed"]
[ext_resource type="Texture2D" uid="uid://oegwi03fqm8" path="res://assets/flakdeau19, Pixel Art Texture Pack/Pixel Art Texture Pack/Concrete/s2 Concrete Lines 3 Grey Hor.png" id="19_fvkvl"]
[ext_resource type="Texture2D" uid="uid://b18ucgn6rx7o2" path="res://assets/little-martian, retro-texture-pack-v9/png/RIVET_1A.png" id="22_5al8l"]
[ext_resource type="Texture2D" uid="uid://tic84psn36wt" path="res://assets/little-martian, retro-texture-pack-v9/png/RIVET_2B.png" id="25_2j44i"]

[sub_resource type="BoxShape3D" id="BoxShape3D_vtwrg"]
size = Vector3(3, 5, 20)

[sub_resource type="BoxShape3D" id="BoxShape3D_eqy6d"]
size = Vector3(20, 20, 20)

[sub_resource type="Shader" id="Shader_mf78y"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_toon;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_gray,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_nearest,repeat_enable;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(0.333333,0.333333,0.333333,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = triplanar_texture(texture_emission,uv1_power_normal,uv1_triplanar_pos).rgb;
	EMISSION = (emission.rgb*emission_tex)*emission_energy;
	vec2 rim_tex = triplanar_texture(texture_rim,uv1_power_normal,uv1_triplanar_pos).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_f4x4h"]
render_priority = 0
shader = SubResource("Shader_mf78y")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 1, 0)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.5
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.3, 0.3, 0.3)
shader_parameter/uv1_offset = Vector3(-0.213, 0, 0.159)
shader_parameter/texture_albedo = ExtResource("3_d5vtv")
shader_parameter/texture_metallic = ExtResource("4_ysw5a")
shader_parameter/texture_roughness = ExtResource("4_ysw5a")
shader_parameter/texture_emission = ExtResource("3_kkhrq")
shader_parameter/texture_rim = ExtResource("4_ysw5a")

[sub_resource type="Shader" id="Shader_7c6sb"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_toon;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_gray,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_nearest,repeat_enable;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(0.333333,0.333333,0.333333,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = triplanar_texture(texture_emission,uv1_power_normal,uv1_triplanar_pos).rgb;
	EMISSION = (emission.rgb*emission_tex)*emission_energy;
	vec2 rim_tex = triplanar_texture(texture_rim,uv1_power_normal,uv1_triplanar_pos).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4odjd"]
render_priority = 0
shader = SubResource("Shader_7c6sb")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = Vector4(1, 1, 1, 1)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.1
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.05, 0.05, 0.05)
shader_parameter/uv1_offset = Vector3(0.108, 0, 0.503)
shader_parameter/texture_albedo = ExtResource("5_el5a3")
shader_parameter/texture_metallic = ExtResource("5_el5a3")
shader_parameter/texture_roughness = ExtResource("5_el5a3")
shader_parameter/texture_emission = ExtResource("5_el5a3")
shader_parameter/texture_rim = ExtResource("5_el5a3")

[sub_resource type="Shader" id="Shader_tdk06"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_toon;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_gray,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_nearest,repeat_enable;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(0.333333,0.333333,0.333333,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = triplanar_texture(texture_emission,uv1_power_normal,uv1_triplanar_pos).rgb;
	EMISSION = (emission.rgb*emission_tex)*emission_energy;
	vec2 rim_tex = triplanar_texture(texture_rim,uv1_power_normal,uv1_triplanar_pos).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2il6s"]
render_priority = 0
shader = SubResource("Shader_tdk06")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = Vector4(1, 1, 1, 1)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.1
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.05, 0.05, 0.05)
shader_parameter/uv1_offset = Vector3(0.108, 0, 0.503)
shader_parameter/texture_albedo = ExtResource("6_07u6a")
shader_parameter/texture_metallic = ExtResource("6_07u6a")
shader_parameter/texture_roughness = ExtResource("6_07u6a")
shader_parameter/texture_emission = ExtResource("6_07u6a")
shader_parameter/texture_rim = ExtResource("6_07u6a")

[sub_resource type="Resource" id="Resource_qqfhg"]
script = ExtResource("10_tmvwi")
frames = Array[Texture]([ExtResource("4_1mls3"), ExtResource("8_srpaq"), ExtResource("6_cqxrc"), ExtResource("9_02hnk"), ExtResource("11_1srnj"), ExtResource("7_wonvn")])

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_ffqt8"]
data = PackedVector3Array(6, 2, -80, 4.0769, 2, -80.7804, 6.0384, 2, -80.3902, 9.9616, 1.2, -79.6098, 11.6955, 1.2, -78.4693, 9.8478, 1.2, -79.2346, 6.0384, 2, -79.6098, 4, 2, -80, 6, 2, -80, 10, 1.4, -80, 11.9231, 1.4, -79.2196, 9.9616, 1.4, -79.6098, 6.1522, 2, -79.2346, 4.0769, 2, -79.2196, 6.0384, 2, -79.6098, 11.9231, 1.6, -80.7804, 10, 1.6, -80, 9.9616, 1.6, -80.3902, 6.3371, 2, -78.8889, 4.3045, 2, -78.4693, 6.1522, 2, -79.2346, 9.8478, 1.8, -80.7654, 11.9231, 1.8, -80.7804, 9.9616, 1.8, -80.3902, 5.1716, 2, -77.1716, 6.3371, 2, -78.8889, 6.5858, 2, -78.5858, 9.6629, 2, -81.1111, 11.6955, 2, -81.5307, 9.8478, 2, -80.7654, 7.6098, 2, -81.9616, 8, 2, -84, 8, 2, -82, 9.4142, 2, -81.4142, 11.3259, 2, -82.2223, 9.6629, 2, -81.1111, 6.4693, 2, -83.6955, 7.6098, 2, -81.9616, 7.2346, 2, -81.8478, 9.1111, 2, -81.6629, 10.8284, 2, -82.8284, 9.4142, 2, -81.4142, 5.7777, 2, -83.3259, 7.2346, 2, -81.8478, 6.8889, 2, -81.6629, 9.5307, 2, -83.6955, 9.1111, 2, -81.6629, 8.7654, 2, -81.8478, 6.5858, 2, -81.4142, 5.7777, 2, -83.3259, 6.8889, 2, -81.6629, 8.3902, 2, -81.9616, 9.5307, 2, -83.6955, 8.7654, 2, -81.8478, 4.6741, 2, -82.2223, 6.5858, 2, -81.4142, 6.3371, 2, -81.1111, 8, 2, -84, 8.3902, 2, -81.9616, 8, 2, -82, 10.8284, 0.6, -77.1716, 9.1111, 0.6, -78.3371, 9.4142, 0.6, -78.5858, 4.3045, 2, -81.5307, 6.3371, 2, -81.1111, 6.1522, 2, -80.7654, 6.0384, 2, -80.3902, 4.3045, 2, -81.5307, 6.1522, 2, -80.7654, 9.8478, 1, -79.2346, 11.3259, 1, -77.7777, 9.6629, 1, -78.8889, 9.5307, 0.2, -76.3045, 8.3902, 0.2, -78.0384, 8.7654, 0.2, -78.1522, 10.2223, 0.4, -76.6741, 8.7654, 0.4, -78.1522, 9.1111, 0.4, -78.3371, 9.6629, 0.8, -78.8889, 10.8284, 0.8, -77.1716, 9.4142, 0.8, -78.5858, 4.3045, 3, -78.4693, 4.0769, 2, -79.2196, 4.3045, 2, -78.4693, 10.2223, 3, -83.3259, 10.8284, 2, -82.8284, 10.2223, 2, -83.3259, 5.7777, 3, -83.3259, 6.4693, 2, -83.6955, 5.7777, 2, -83.3259, 4.6741, 3, -77.7777, 4.3045, 2, -78.4693, 4.6741, 2, -77.7777, 9.5307, 3, -83.6955, 10.2223, 2, -83.3259, 9.5307, 2, -83.6955, 5.1716, 3, -82.8284, 5.7777, 2, -83.3259, 5.1716, 2, -82.8284, 5.1716, 3, -77.1716, 4.6741, 2, -77.7777, 5.1716, 2, -77.1716, 8.7804, 3, -83.9231, 9.5307, 2, -83.6955, 8.7804, 2, -83.9231, 4.6741, 3, -82.2223, 5.1716, 2, -82.8284, 4.6741, 2, -82.2223, 5.7777, 3, -76.6741, 5.1716, 2, -77.1716, 5.7777, 2, -76.6741, 8, 3, -84, 8.7804, 2, -83.9231, 8, 2, -84, 4.3045, 3, -81.5307, 4.6741, 2, -82.2223, 4.3045, 2, -81.5307, 4.0769, 3, -80.7804, 4.3045, 2, -81.5307, 4.0769, 2, -80.7804, 4, 3, -80, 4.0769, 2, -80.7804, 4, 2, -80, 11.3259, 3, -82.2223, 11.6955, 2, -81.5307, 11.3259, 2, -82.2223, 7.2196, 3, -83.9231, 8, 2, -84, 7.2196, 2, -83.9231, 4.0769, 3, -79.2196, 4, 2, -80, 4.0769, 2, -79.2196, 10.8284, 3, -82.8284, 11.3259, 2, -82.2223, 10.8284, 2, -82.8284, 6.4693, 3, -83.6955, 7.2196, 2, -83.9231, 6.4693, 2, -83.6955, 6.5904, 2, -76.7964, 5.7777, 2, -76.6741, 6.9931, 2, -77.7117, 6.8889, 3, -78.3371, 6.9931, 2, -77.7117, 6.8889, 2, -78.3371, 6.5904, 3, -76.7964, 6.9931, 2, -77.7117, 6.9931, 3, -77.7117, 5.7777, 3, -76.6741, 6.5904, 2, -76.7964, 6.5904, 3, -76.7964, 3.8966, 1.9026, -80, 6.0384, 1.9, -80.3902, 3.9754, 1.9026, -80.8005, 11.9231, 1.1, -79.2196, 9.8478, 1.1, -79.2346, 11.6955, 1.1, -78.4693, 3.8966, 1.9026, -80, 6.0384, 1.9, -79.6098, 6, 1.9, -80, 11.9231, 1.3, -79.2196, 10, 1.3, -80, 9.9616, 1.3, -79.6098, 3.9754, 1.9026, -79.1995, 6.1522, 1.9, -79.2346, 6.0384, 1.9, -79.6098, 11.9231, 1.5, -80.7804, 10, 1.5, -80, 12, 1.5, -80, 4.5881, 1.9026, -77.7203, 6.1522, 1.9, -79.2346, 4.2089, 1.9026, -78.4297, 11.9231, 1.7, -80.7804, 9.8478, 1.7, -80.7654, 9.9616, 1.7, -80.3902, 5.0985, 1.9026, -77.0985, 6.3371, 1.9, -78.8889, 4.5881, 1.9026, -77.7203, 11.7867, 1.903, -81.5795, 9.6629, 1.9, -81.1111, 9.8478, 1.9, -80.7654, 8, 1.9026, -84.1034, 7.6098, 1.9, -81.9616, 8, 1.9, -82, 10.9015, 1.9026, -82.9015, 9.6629, 1.9, -81.1111, 11.4119, 1.9026, -82.2797, 7.1995, 1.9026, -84.0246, 7.2346, 1.9, -81.8478, 7.6098, 1.9, -81.9616, 10.9015, 1.9026, -82.9015, 9.1111, 1.9, -81.6629, 9.4142, 1.9, -81.4142, 5.7203, 1.9026, -83.4119, 7.2346, 1.9, -81.8478, 6.4297, 1.9026, -83.7911, 10.2797, 1.9026, -83.4119, 8.7654, 1.9, -81.8478, 9.1111, 1.9, -81.6629, 5.0985, 1.9026, -82.9015, 6.8889, 1.9, -81.6629, 5.7203, 1.9026, -83.4119, 9.5703, 1.9026, -83.7911, 8.3902, 1.9, -81.9616, 8.7654, 1.9, -81.8478, 5.0985, 1.9026, -82.9015, 6.3371, 1.9, -81.1111, 6.5858, 1.9, -81.4142, 8.8005, 1.9026, -84.0246, 8, 1.9, -82, 8.3902, 1.9, -81.9616, 10.2223, 0.5, -76.6741, 9.4142, 0.5, -78.5858, 9.1111, 0.5, -78.3371, 4.5881, 1.9026, -82.2797, 6.1522, 1.9, -80.7654, 6.3371, 1.9, -81.1111, 4.2089, 1.9026, -81.5703, 6.0384, 1.9, -80.3902, 6.1522, 1.9, -80.7654, 11.3259, 0.9, -77.7777, 9.8478, 0.9, -79.2346, 9.6629, 0.9, -78.8889, 8.7804, 0.1, -76.0769, 8.7654, 0.1, -78.1522, 8.3902, 0.1, -78.0384, 9.5307, 0.3, -76.3045, 9.1111, 0.3, -78.3371, 8.7654, 0.3, -78.1522, 10.8284, 0.7, -77.1716, 9.6629, 0.7, -78.8889, 9.4142, 0.7, -78.5858, 3.9754, 1.9026, -79.1995, 4.2116, 3, -78.4308, 4.2089, 1.9026, -78.4297, 10.9015, 1.9026, -82.9015, 10.2781, 3, -83.4094, 10.2797, 1.9026, -83.4119, 6.4308, 3, -83.7884, 5.7203, 1.9026, -83.4119, 6.4297, 1.9026, -83.7911, 4.2116, 3, -78.4308, 4.5881, 1.9026, -77.7203, 4.2089, 1.9026, -78.4297, 10.2797, 1.9026, -83.4119, 9.5692, 3, -83.7884, 9.5703, 1.9026, -83.7911, 5.7203, 1.9026, -83.4119, 5.1005, 3, -82.8995, 5.0985, 1.9026, -82.9015, 4.5881, 1.9026, -77.7203, 5.1005, 3, -77.1005, 5.0985, 1.9026, -77.0985, 9.5703, 1.9026, -83.7911, 8.8, 3, -84.0217, 8.8005, 1.9026, -84.0246, 5.0985, 1.9026, -82.9015, 4.5906, 3, -82.2781, 4.5881, 1.9026, -82.2797, 5.1005, 3, -77.1005, 5.7478, 1.9096, -76.5656, 5.0985, 1.9026, -77.0985, 8.8005, 1.9026, -84.0246, 8, 3, -84.1005, 8, 1.9026, -84.1034, 4.5881, 1.9026, -82.2797, 4.2116, 3, -81.5692, 4.2089, 1.9026, -81.5703, 4.2116, 3, -81.5692, 3.9754, 1.9026, -80.8005, 4.2089, 1.9026, -81.5703, 3.9783, 3, -80.8, 3.8966, 1.9026, -80, 3.9754, 1.9026, -80.8005, 11.7867, 1.903, -81.5795, 11.4094, 3, -82.2781, 11.4119, 1.9026, -82.2797, 8, 1.9026, -84.1034, 7.2, 3, -84.0217, 7.1995, 1.9026, -84.0246, 3.8966, 1.9026, -80, 3.9783, 3, -79.2, 3.9754, 1.9026, -79.1995, 11.4119, 1.9026, -82.2797, 10.8995, 3, -82.8995, 10.9015, 1.9026, -82.9015, 7.1995, 1.9026, -84.0246, 6.4308, 3, -83.7884, 6.4297, 1.9026, -83.7911, 7.0987, 1.9095, -77.6985, 5.0985, 1.9026, -77.0985, 5.7478, 1.9096, -76.5656, 7.0987, 1.9095, -77.6985, 6.9875, 3, -78.3535, 6.9766, 1.8628, -78.3517, 7.0987, 1.9095, -77.6985, 6.6597, 3, -76.7057, 7.0967, 3, -77.6987, 5.7478, 1.9096, -76.5656, 6.6597, 3, -76.7057, 6.6619, 1.9087, -76.7029, 8, 1.9, -82, 7.6098, 2, -81.9616, 8, 2, -82, 7.6098, 1.9, -81.9616, 7.2346, 2, -81.8478, 7.6098, 2, -81.9616, 7.2346, 1.9, -81.8478, 6.8889, 2, -81.6629, 7.2346, 2, -81.8478, 6.8889, 1.9, -81.6629, 6.5858, 2, -81.4142, 6.8889, 2, -81.6629, 6.5858, 1.9, -81.4142, 6.3371, 2, -81.1111, 6.5858, 2, -81.4142, 6.3371, 1.9, -81.1111, 6.1522, 2, -80.7654, 6.3371, 2, -81.1111, 6.1522, 1.9, -80.7654, 6.0384, 2, -80.3902, 6.1522, 2, -80.7654, 6.0384, 1.9, -80.3902, 6, 2, -80, 6.0384, 2, -80.3902, 6, 1.9, -80, 6.0384, 2, -79.6098, 6, 2, -80, 6.0384, 1.9, -79.6098, 6.1522, 2, -79.2346, 6.0384, 2, -79.6098, 6.1522, 1.9, -79.2346, 6.3371, 2, -78.8889, 6.1522, 2, -79.2346, 6.3371, 1.9, -78.8889, 6.5858, 2, -78.5858, 6.3371, 2, -78.8889, 6.5858, 1.9, -78.5858, 6.8889, 2, -78.3371, 6.5858, 2, -78.5858, 10.2223, 0.5, -76.6741, 9.1111, 0.6, -78.3371, 10.2223, 0.6, -76.6741, 9.8478, 0.9, -79.2346, 11.6955, 1, -78.4693, 9.8478, 1, -79.2346, 11.6955, 1.1, -78.4693, 9.8478, 1.2, -79.2346, 11.6955, 1.2, -78.4693, 11.9231, 1.3, -79.2196, 9.9616, 1.4, -79.6098, 11.9231, 1.4, -79.2196, 12, 1.5, -80, 10, 1.6, -80, 12, 1.6, -80, 11.9231, 1.7, -80.7804, 9.9616, 1.8, -80.3902, 11.9231, 1.8, -80.7804, 9.8478, 1.9, -80.7654, 9.6629, 2, -81.1111, 9.8478, 2, -80.7654, 9.6629, 1.9, -81.1111, 9.4142, 2, -81.4142, 9.6629, 2, -81.1111, 9.4142, 1.9, -81.4142, 9.1111, 2, -81.6629, 9.4142, 2, -81.4142, 9.1111, 1.9, -81.6629, 8.7654, 2, -81.8478, 9.1111, 2, -81.6629, 8.7654, 1.9, -81.8478, 8.3902, 2, -81.9616, 8.7654, 2, -81.8478, 8.3902, 1.9, -81.9616, 8, 2, -82, 8.3902, 2, -81.9616, 10.8284, 0.5, -77.1716, 10.2223, 0.6, -76.6741, 10.8284, 0.6, -77.1716, 11.6955, 0.9, -78.4693, 11.3259, 1, -77.7777, 11.6955, 1, -78.4693, 11.9231, 1.1, -79.2196, 11.6955, 1.2, -78.4693, 11.9231, 1.2, -79.2196, 12, 1.3, -80, 11.9231, 1.4, -79.2196, 12, 1.4, -80, 11.9231, 1.5, -80.7804, 12, 1.6, -80, 11.9231, 1.6, -80.7804, 11.6955, 1.7, -81.5307, 11.9231, 1.8, -80.7804, 11.6955, 1.8, -81.5307, 9.9616, 1.3, -79.6098, 10, 1.4, -80, 9.9616, 1.4, -79.6098, 9.8478, 1.1, -79.2346, 9.9616, 1.2, -79.6098, 9.8478, 1.2, -79.2346, 10, 1.5, -80, 9.9616, 1.6, -80.3902, 10, 1.6, -80, 9.9616, 1.7, -80.3902, 9.8478, 1.8, -80.7654, 9.9616, 1.8, -80.3902, 9.8478, 1.9, -80.7654, 11.6955, 2, -81.5307, 11.7867, 1.903, -81.5795, 9.1111, 0.5, -78.3371, 9.4142, 0.6, -78.5858, 9.1111, 0.6, -78.3371, 9.6629, 0.9, -78.8889, 9.8478, 1, -79.2346, 9.6629, 1, -78.8889, 8.3902, 0.1, -78.0384, 8.7654, 0.2, -78.1522, 8.3902, 0.2, -78.0384, 9.5307, 0.1, -76.3045, 8.7804, 0.2, -76.0769, 9.5307, 0.2, -76.3045, 8.7804, 0.1, -76.0769, 8.3902, 0.2, -78.0384, 8.7804, 0.2, -76.0769, 8.7654, 0.1, -78.1522, 9.5307, 0.2, -76.3045, 8.7654, 0.2, -78.1522, 8.7654, 0.3, -78.1522, 9.1111, 0.4, -78.3371, 8.7654, 0.4, -78.1522, 10.2223, 0.3, -76.6741, 9.5307, 0.4, -76.3045, 10.2223, 0.4, -76.6741, 9.5307, 0.3, -76.3045, 8.7654, 0.4, -78.1522, 9.5307, 0.4, -76.3045, 9.1111, 0.3, -78.3371, 10.2223, 0.4, -76.6741, 9.1111, 0.4, -78.3371, 9.4142, 0.5, -78.5858, 10.8284, 0.6, -77.1716, 9.4142, 0.6, -78.5858, 9.4142, 0.7, -78.5858, 9.6629, 0.8, -78.8889, 9.4142, 0.8, -78.5858, 11.3259, 0.7, -77.7777, 10.8284, 0.8, -77.1716, 11.3259, 0.8, -77.7777, 9.6629, 0.7, -78.8889, 11.3259, 0.8, -77.7777, 9.6629, 0.8, -78.8889, 10.8284, 0.7, -77.1716, 9.4142, 0.8, -78.5858, 10.8284, 0.8, -77.1716, 11.3259, 0.9, -77.7777, 9.6629, 1, -78.8889, 11.3259, 1, -77.7777, 9.9616, 1.1, -79.6098, 11.9231, 1.2, -79.2196, 9.9616, 1.2, -79.6098, 10, 1.3, -80, 12, 1.4, -80, 10, 1.4, -80, 9.9616, 1.5, -80.3902, 11.9231, 1.6, -80.7804, 9.9616, 1.6, -80.3902, 9.8478, 1.7, -80.7654, 11.6955, 1.8, -81.5307, 9.8478, 1.8, -80.7654, 6.4308, 3, -83.7884, 7.2196, 3, -83.9231, 6.4693, 3, -83.6955, 7.2, 3, -84.0217, 8, 3, -84, 7.2196, 3, -83.9231, 6.4308, 3, -83.7884, 5.7777, 3, -83.3259, 5.7219, 3, -83.4094, 5.7219, 3, -83.4094, 5.1716, 3, -82.8284, 5.1005, 3, -82.8995, 4.5906, 3, -82.2781, 5.1716, 3, -82.8284, 4.6741, 3, -82.2223, 4.2116, 3, -81.5692, 4.6741, 3, -82.2223, 4.3045, 3, -81.5307, 4.2116, 3, -81.5692, 4.0769, 3, -80.7804, 3.9783, 3, -80.8, 3.9783, 3, -80.8, 4, 3, -80, 3.8995, 3, -80, 3.9783, 3, -79.2, 4, 3, -80, 4.0769, 3, -79.2196, 4.2116, 3, -78.4308, 4.0769, 3, -79.2196, 4.3045, 3, -78.4693, 4.2116, 3, -78.4308, 4.6741, 3, -77.7777, 4.5906, 3, -77.7219, 4.5906, 3, -77.7219, 5.1716, 3, -77.1716, 5.1005, 3, -77.1005, 5.1005, 3, -77.1005, 5.7777, 3, -76.6741, 5.7486, 3, -76.5686, 11.7837, 3, -81.5779, 11.3259, 3, -82.2223, 11.4094, 3, -82.2781, 11.4094, 3, -82.2781, 10.8284, 3, -82.8284, 10.8995, 3, -82.8995, 10.2781, 3, -83.4094, 10.8284, 3, -82.8284, 10.2223, 3, -83.3259, 9.5692, 3, -83.7884, 10.2223, 3, -83.3259, 9.5307, 3, -83.6955, 9.5692, 3, -83.7884, 8.7804, 3, -83.9231, 8.8, 3, -84.0217, 8.8, 3, -84.0217, 8, 3, -84, 8, 3, -84.1005, 11.7837, 3, -81.5779, 11.6955, 2, -81.5307, 11.6955, 3, -81.5307, 6.9875, 3, -78.3535, 6.8889, 2, -78.3371, 6.9766, 1.8628, -78.3517, 7.0967, 3, -77.6987, 6.5904, 3, -76.7964, 6.9931, 3, -77.7117, 5.7486, 3, -76.5686, 6.5904, 3, -76.7964, 6.6597, 3, -76.7057, 6.9875, 3, -78.3535, 6.9931, 3, -77.7117, 6.8889, 3, -78.3371, 4, 2, -80, 4.0769, 2, -80.7804, 6, 2, -80, 11.9231, 1.2, -79.2196, 11.6955, 1.2, -78.4693, 9.9616, 1.2, -79.6098, 4.0769, 2, -79.2196, 4, 2, -80, 6.0384, 2, -79.6098, 12, 1.4, -80, 11.9231, 1.4, -79.2196, 10, 1.4, -80, 4.3045, 2, -78.4693, 4.0769, 2, -79.2196, 6.1522, 2, -79.2346, 12, 1.6, -80, 10, 1.6, -80, 11.9231, 1.6, -80.7804, 4.6741, 2, -77.7777, 4.3045, 2, -78.4693, 6.3371, 2, -78.8889, 11.6955, 1.8, -81.5307, 11.9231, 1.8, -80.7804, 9.8478, 1.8, -80.7654, 4.6741, 2, -77.7777, 6.3371, 2, -78.8889, 5.1716, 2, -77.1716, 11.3259, 2, -82.2223, 11.6955, 2, -81.5307, 9.6629, 2, -81.1111, 7.2196, 2, -83.9231, 8, 2, -84, 7.6098, 2, -81.9616, 10.8284, 2, -82.8284, 11.3259, 2, -82.2223, 9.4142, 2, -81.4142, 7.2196, 2, -83.9231, 7.6098, 2, -81.9616, 6.4693, 2, -83.6955, 10.2223, 2, -83.3259, 10.8284, 2, -82.8284, 9.1111, 2, -81.6629, 6.4693, 2, -83.6955, 7.2346, 2, -81.8478, 5.7777, 2, -83.3259, 10.2223, 2, -83.3259, 9.1111, 2, -81.6629, 9.5307, 2, -83.6955, 5.1716, 2, -82.8284, 5.7777, 2, -83.3259, 6.5858, 2, -81.4142, 8.7804, 2, -83.9231, 9.5307, 2, -83.6955, 8.3902, 2, -81.9616, 5.1716, 2, -82.8284, 6.5858, 2, -81.4142, 4.6741, 2, -82.2223, 8.7804, 2, -83.9231, 8.3902, 2, -81.9616, 8, 2, -84, 10.2223, 0.6, -76.6741, 9.1111, 0.6, -78.3371, 10.8284, 0.6, -77.1716, 4.6741, 2, -82.2223, 6.3371, 2, -81.1111, 4.3045, 2, -81.5307, 4.0769, 2, -80.7804, 4.3045, 2, -81.5307, 6.0384, 2, -80.3902, 11.6955, 1, -78.4693, 11.3259, 1, -77.7777, 9.8478, 1, -79.2346, 8.7804, 0.2, -76.0769, 8.3902, 0.2, -78.0384, 9.5307, 0.2, -76.3045, 9.5307, 0.4, -76.3045, 8.7654, 0.4, -78.1522, 10.2223, 0.4, -76.6741, 11.3259, 0.8, -77.7777, 10.8284, 0.8, -77.1716, 9.6629, 0.8, -78.8889, 4.0769, 3, -79.2196, 4.0769, 2, -79.2196, 4.3045, 3, -78.4693, 10.8284, 3, -82.8284, 10.8284, 2, -82.8284, 10.2223, 3, -83.3259, 6.4693, 3, -83.6955, 6.4693, 2, -83.6955, 5.7777, 3, -83.3259, 4.3045, 3, -78.4693, 4.3045, 2, -78.4693, 4.6741, 3, -77.7777, 10.2223, 3, -83.3259, 10.2223, 2, -83.3259, 9.5307, 3, -83.6955, 5.7777, 3, -83.3259, 5.7777, 2, -83.3259, 5.1716, 3, -82.8284, 4.6741, 3, -77.7777, 4.6741, 2, -77.7777, 5.1716, 3, -77.1716, 9.5307, 3, -83.6955, 9.5307, 2, -83.6955, 8.7804, 3, -83.9231, 5.1716, 3, -82.8284, 5.1716, 2, -82.8284, 4.6741, 3, -82.2223, 5.1716, 3, -77.1716, 5.1716, 2, -77.1716, 5.7777, 3, -76.6741, 8.7804, 3, -83.9231, 8.7804, 2, -83.9231, 8, 3, -84, 4.6741, 3, -82.2223, 4.6741, 2, -82.2223, 4.3045, 3, -81.5307, 4.3045, 3, -81.5307, 4.3045, 2, -81.5307, 4.0769, 3, -80.7804, 4.0769, 3, -80.7804, 4.0769, 2, -80.7804, 4, 3, -80, 11.6955, 3, -81.5307, 11.6955, 2, -81.5307, 11.3259, 3, -82.2223, 8, 3, -84, 8, 2, -84, 7.2196, 3, -83.9231, 4, 3, -80, 4, 2, -80, 4.0769, 3, -79.2196, 11.3259, 3, -82.2223, 11.3259, 2, -82.2223, 10.8284, 3, -82.8284, 7.2196, 3, -83.9231, 7.2196, 2, -83.9231, 6.4693, 3, -83.6955, 6.5858, 2, -78.5858, 6.8889, 2, -78.3371, 6.9931, 2, -77.7117, 5.1716, 2, -77.1716, 6.5858, 2, -78.5858, 6.9931, 2, -77.7117, 5.7777, 2, -76.6741, 5.1716, 2, -77.1716, 6.9931, 2, -77.7117, 6.9931, 3, -77.7117, 6.9931, 2, -77.7117, 6.8889, 3, -78.3371, 6.5904, 2, -76.7964, 6.9931, 2, -77.7117, 6.5904, 3, -76.7964, 5.7777, 2, -76.6741, 6.5904, 2, -76.7964, 5.7777, 3, -76.6741, 6, 1.9, -80, 6.0384, 1.9, -80.3902, 3.8966, 1.9026, -80, 9.9616, 1.1, -79.6098, 9.8478, 1.1, -79.2346, 11.9231, 1.1, -79.2196, 3.9754, 1.9026, -79.1995, 6.0384, 1.9, -79.6098, 3.8966, 1.9026, -80, 12, 1.3, -80, 10, 1.3, -80, 11.9231, 1.3, -79.2196, 4.2089, 1.9026, -78.4297, 6.1522, 1.9, -79.2346, 3.9754, 1.9026, -79.1995, 9.9616, 1.5, -80.3902, 10, 1.5, -80, 11.9231, 1.5, -80.7804, 6.3371, 1.9, -78.8889, 6.1522, 1.9, -79.2346, 4.5881, 1.9026, -77.7203, 11.6955, 1.7, -81.5307, 9.8478, 1.7, -80.7654, 11.9231, 1.7, -80.7804, 6.5858, 1.9, -78.5858, 6.3371, 1.9, -78.8889, 5.0985, 1.9026, -77.0985, 11.4119, 1.9026, -82.2797, 9.6629, 1.9, -81.1111, 11.7867, 1.903, -81.5795, 7.1995, 1.9026, -84.0246, 7.6098, 1.9, -81.9616, 8, 1.9026, -84.1034, 9.4142, 1.9, -81.4142, 9.6629, 1.9, -81.1111, 10.9015, 1.9026, -82.9015, 6.4297, 1.9026, -83.7911, 7.2346, 1.9, -81.8478, 7.1995, 1.9026, -84.0246, 10.2797, 1.9026, -83.4119, 9.1111, 1.9, -81.6629, 10.9015, 1.9026, -82.9015, 6.8889, 1.9, -81.6629, 7.2346, 1.9, -81.8478, 5.7203, 1.9026, -83.4119, 9.5703, 1.9026, -83.7911, 8.7654, 1.9, -81.8478, 10.2797, 1.9026, -83.4119, 6.5858, 1.9, -81.4142, 6.8889, 1.9, -81.6629, 5.0985, 1.9026, -82.9015, 8.8005, 1.9026, -84.0246, 8.3902, 1.9, -81.9616, 9.5703, 1.9026, -83.7911, 4.5881, 1.9026, -82.2797, 6.3371, 1.9, -81.1111, 5.0985, 1.9026, -82.9015, 8, 1.9026, -84.1034, 8, 1.9, -82, 8.8005, 1.9026, -84.0246, 10.8284, 0.5, -77.1716, 9.4142, 0.5, -78.5858, 10.2223, 0.5, -76.6741, 4.2089, 1.9026, -81.5703, 6.1522, 1.9, -80.7654, 4.5881, 1.9026, -82.2797, 3.9754, 1.9026, -80.8005, 6.0384, 1.9, -80.3902, 4.2089, 1.9026, -81.5703, 11.6955, 0.9, -78.4693, 9.8478, 0.9, -79.2346, 11.3259, 0.9, -77.7777, 9.5307, 0.1, -76.3045, 8.7654, 0.1, -78.1522, 8.7804, 0.1, -76.0769, 10.2223, 0.3, -76.6741, 9.1111, 0.3, -78.3371, 9.5307, 0.3, -76.3045, 11.3259, 0.7, -77.7777, 9.6629, 0.7, -78.8889, 10.8284, 0.7, -77.1716, 3.9783, 3, -79.2, 4.2116, 3, -78.4308, 3.9754, 1.9026, -79.1995, 10.8995, 3, -82.8995, 10.2781, 3, -83.4094, 10.9015, 1.9026, -82.9015, 5.7219, 3, -83.4094, 5.7203, 1.9026, -83.4119, 6.4308, 3, -83.7884, 4.5906, 3, -77.7219, 4.5881, 1.9026, -77.7203, 4.2116, 3, -78.4308, 10.2781, 3, -83.4094, 9.5692, 3, -83.7884, 10.2797, 1.9026, -83.4119, 5.7219, 3, -83.4094, 5.1005, 3, -82.8995, 5.7203, 1.9026, -83.4119, 4.5906, 3, -77.7219, 5.1005, 3, -77.1005, 4.5881, 1.9026, -77.7203, 9.5692, 3, -83.7884, 8.8, 3, -84.0217, 9.5703, 1.9026, -83.7911, 5.1005, 3, -82.8995, 4.5906, 3, -82.2781, 5.0985, 1.9026, -82.9015, 5.7486, 3, -76.5686, 5.7478, 1.9096, -76.5656, 5.1005, 3, -77.1005, 8.8, 3, -84.0217, 8, 3, -84.1005, 8.8005, 1.9026, -84.0246, 4.5906, 3, -82.2781, 4.2116, 3, -81.5692, 4.5881, 1.9026, -82.2797, 3.9783, 3, -80.8, 3.9754, 1.9026, -80.8005, 4.2116, 3, -81.5692, 3.8995, 3, -80, 3.8966, 1.9026, -80, 3.9783, 3, -80.8, 11.7837, 3, -81.5779, 11.4094, 3, -82.2781, 11.7867, 1.903, -81.5795, 8, 3, -84.1005, 7.2, 3, -84.0217, 8, 1.9026, -84.1034, 3.8995, 3, -80, 3.9783, 3, -79.2, 3.8966, 1.9026, -80, 11.4094, 3, -82.2781, 10.8995, 3, -82.8995, 11.4119, 1.9026, -82.2797, 7.2, 3, -84.0217, 6.4308, 3, -83.7884, 7.1995, 1.9026, -84.0246, 6.5858, 1.9, -78.5858, 5.0985, 1.9026, -77.0985, 7.0987, 1.9095, -77.6985, 6.9766, 1.8628, -78.3517, 6.5858, 1.9, -78.5858, 7.0987, 1.9095, -77.6985, 6.6619, 1.9087, -76.7029, 7.0987, 1.9095, -77.6985, 5.7478, 1.9096, -76.5656, 7.0967, 3, -77.6987, 6.9875, 3, -78.3535, 7.0987, 1.9095, -77.6985, 6.6619, 1.9087, -76.7029, 6.6597, 3, -76.7057, 7.0987, 1.9095, -77.6985, 5.7486, 3, -76.5686, 6.6597, 3, -76.7057, 5.7478, 1.9096, -76.5656, 7.6098, 1.9, -81.9616, 7.6098, 2, -81.9616, 8, 1.9, -82, 7.2346, 1.9, -81.8478, 7.2346, 2, -81.8478, 7.6098, 1.9, -81.9616, 6.8889, 1.9, -81.6629, 6.8889, 2, -81.6629, 7.2346, 1.9, -81.8478, 6.5858, 1.9, -81.4142, 6.5858, 2, -81.4142, 6.8889, 1.9, -81.6629, 6.3371, 1.9, -81.1111, 6.3371, 2, -81.1111, 6.5858, 1.9, -81.4142, 6.1522, 1.9, -80.7654, 6.1522, 2, -80.7654, 6.3371, 1.9, -81.1111, 6.0384, 1.9, -80.3902, 6.0384, 2, -80.3902, 6.1522, 1.9, -80.7654, 6, 1.9, -80, 6, 2, -80, 6.0384, 1.9, -80.3902, 6.0384, 1.9, -79.6098, 6.0384, 2, -79.6098, 6, 1.9, -80, 6.1522, 1.9, -79.2346, 6.1522, 2, -79.2346, 6.0384, 1.9, -79.6098, 6.3371, 1.9, -78.8889, 6.3371, 2, -78.8889, 6.1522, 1.9, -79.2346, 6.5858, 1.9, -78.5858, 6.5858, 2, -78.5858, 6.3371, 1.9, -78.8889, 6.9766, 1.8628, -78.3517, 6.8889, 2, -78.3371, 6.5858, 1.9, -78.5858, 9.1111, 0.5, -78.3371, 9.1111, 0.6, -78.3371, 10.2223, 0.5, -76.6741, 11.6955, 0.9, -78.4693, 11.6955, 1, -78.4693, 9.8478, 0.9, -79.2346, 9.8478, 1.1, -79.2346, 9.8478, 1.2, -79.2346, 11.6955, 1.1, -78.4693, 9.9616, 1.3, -79.6098, 9.9616, 1.4, -79.6098, 11.9231, 1.3, -79.2196, 10, 1.5, -80, 10, 1.6, -80, 12, 1.5, -80, 9.9616, 1.7, -80.3902, 9.9616, 1.8, -80.3902, 11.9231, 1.7, -80.7804, 9.6629, 1.9, -81.1111, 9.6629, 2, -81.1111, 9.8478, 1.9, -80.7654, 9.4142, 1.9, -81.4142, 9.4142, 2, -81.4142, 9.6629, 1.9, -81.1111, 9.1111, 1.9, -81.6629, 9.1111, 2, -81.6629, 9.4142, 1.9, -81.4142, 8.7654, 1.9, -81.8478, 8.7654, 2, -81.8478, 9.1111, 1.9, -81.6629, 8.3902, 1.9, -81.9616, 8.3902, 2, -81.9616, 8.7654, 1.9, -81.8478, 8, 1.9, -82, 8, 2, -82, 8.3902, 1.9, -81.9616, 10.2223, 0.5, -76.6741, 10.2223, 0.6, -76.6741, 10.8284, 0.5, -77.1716, 11.3259, 0.9, -77.7777, 11.3259, 1, -77.7777, 11.6955, 0.9, -78.4693, 11.6955, 1.1, -78.4693, 11.6955, 1.2, -78.4693, 11.9231, 1.1, -79.2196, 11.9231, 1.3, -79.2196, 11.9231, 1.4, -79.2196, 12, 1.3, -80, 12, 1.5, -80, 12, 1.6, -80, 11.9231, 1.5, -80.7804, 11.9231, 1.7, -80.7804, 11.9231, 1.8, -80.7804, 11.6955, 1.7, -81.5307, 10, 1.3, -80, 10, 1.4, -80, 9.9616, 1.3, -79.6098, 9.9616, 1.1, -79.6098, 9.9616, 1.2, -79.6098, 9.8478, 1.1, -79.2346, 9.9616, 1.5, -80.3902, 9.9616, 1.6, -80.3902, 10, 1.5, -80, 9.8478, 1.7, -80.7654, 9.8478, 1.8, -80.7654, 9.9616, 1.7, -80.3902, 9.8478, 2, -80.7654, 11.6955, 2, -81.5307, 9.8478, 1.9, -80.7654, 9.4142, 0.5, -78.5858, 9.4142, 0.6, -78.5858, 9.1111, 0.5, -78.3371, 9.8478, 0.9, -79.2346, 9.8478, 1, -79.2346, 9.6629, 0.9, -78.8889, 8.7654, 0.1, -78.1522, 8.7654, 0.2, -78.1522, 8.3902, 0.1, -78.0384, 8.7804, 0.1, -76.0769, 8.7804, 0.2, -76.0769, 9.5307, 0.1, -76.3045, 8.3902, 0.1, -78.0384, 8.3902, 0.2, -78.0384, 8.7804, 0.1, -76.0769, 9.5307, 0.1, -76.3045, 9.5307, 0.2, -76.3045, 8.7654, 0.1, -78.1522, 9.1111, 0.3, -78.3371, 9.1111, 0.4, -78.3371, 8.7654, 0.3, -78.1522, 9.5307, 0.3, -76.3045, 9.5307, 0.4, -76.3045, 10.2223, 0.3, -76.6741, 8.7654, 0.3, -78.1522, 8.7654, 0.4, -78.1522, 9.5307, 0.3, -76.3045, 10.2223, 0.3, -76.6741, 10.2223, 0.4, -76.6741, 9.1111, 0.3, -78.3371, 10.8284, 0.5, -77.1716, 10.8284, 0.6, -77.1716, 9.4142, 0.5, -78.5858, 9.6629, 0.7, -78.8889, 9.6629, 0.8, -78.8889, 9.4142, 0.7, -78.5858, 10.8284, 0.7, -77.1716, 10.8284, 0.8, -77.1716, 11.3259, 0.7, -77.7777, 11.3259, 0.7, -77.7777, 11.3259, 0.8, -77.7777, 9.6629, 0.7, -78.8889, 9.4142, 0.7, -78.5858, 9.4142, 0.8, -78.5858, 10.8284, 0.7, -77.1716, 9.6629, 0.9, -78.8889, 9.6629, 1, -78.8889, 11.3259, 0.9, -77.7777, 11.9231, 1.1, -79.2196, 11.9231, 1.2, -79.2196, 9.9616, 1.1, -79.6098, 12, 1.3, -80, 12, 1.4, -80, 10, 1.3, -80, 11.9231, 1.5, -80.7804, 11.9231, 1.6, -80.7804, 9.9616, 1.5, -80.3902, 11.6955, 1.7, -81.5307, 11.6955, 1.8, -81.5307, 9.8478, 1.7, -80.7654, 7.2, 3, -84.0217, 7.2196, 3, -83.9231, 6.4308, 3, -83.7884, 8, 3, -84.1005, 8, 3, -84, 7.2, 3, -84.0217, 6.4693, 3, -83.6955, 5.7777, 3, -83.3259, 6.4308, 3, -83.7884, 5.7777, 3, -83.3259, 5.1716, 3, -82.8284, 5.7219, 3, -83.4094, 5.1005, 3, -82.8995, 5.1716, 3, -82.8284, 4.5906, 3, -82.2781, 4.5906, 3, -82.2781, 4.6741, 3, -82.2223, 4.2116, 3, -81.5692, 4.3045, 3, -81.5307, 4.0769, 3, -80.7804, 4.2116, 3, -81.5692, 4.0769, 3, -80.7804, 4, 3, -80, 3.9783, 3, -80.8, 3.8995, 3, -80, 4, 3, -80, 3.9783, 3, -79.2, 3.9783, 3, -79.2, 4.0769, 3, -79.2196, 4.2116, 3, -78.4308, 4.3045, 3, -78.4693, 4.6741, 3, -77.7777, 4.2116, 3, -78.4308, 4.6741, 3, -77.7777, 5.1716, 3, -77.1716, 4.5906, 3, -77.7219, 5.1716, 3, -77.1716, 5.7777, 3, -76.6741, 5.1005, 3, -77.1005, 11.6955, 3, -81.5307, 11.3259, 3, -82.2223, 11.7837, 3, -81.5779, 11.3259, 3, -82.2223, 10.8284, 3, -82.8284, 11.4094, 3, -82.2781, 10.8995, 3, -82.8995, 10.8284, 3, -82.8284, 10.2781, 3, -83.4094, 10.2781, 3, -83.4094, 10.2223, 3, -83.3259, 9.5692, 3, -83.7884, 9.5307, 3, -83.6955, 8.7804, 3, -83.9231, 9.5692, 3, -83.7884, 8.7804, 3, -83.9231, 8, 3, -84, 8.8, 3, -84.0217, 11.7867, 1.903, -81.5795, 11.6955, 2, -81.5307, 11.7837, 3, -81.5779, 6.8889, 3, -78.3371, 6.8889, 2, -78.3371, 6.9875, 3, -78.3535, 6.6597, 3, -76.7057, 6.5904, 3, -76.7964, 7.0967, 3, -77.6987, 5.7777, 3, -76.6741, 6.5904, 3, -76.7964, 5.7486, 3, -76.5686, 7.0967, 3, -77.6987, 6.9931, 3, -77.7117, 6.9875, 3, -78.3535)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_sju3c"]
render_priority = 0
shader = SubResource("Shader_mf78y")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.5
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 1.0
shader_parameter/metallic = 1.0
shader_parameter/emission = null
shader_parameter/emission_energy = null
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.5, 0.5, 0.5)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("22_5al8l")
shader_parameter/texture_metallic = ExtResource("18_eifed")
shader_parameter/texture_roughness = ExtResource("18_eifed")
shader_parameter/texture_emission = ExtResource("17_gt40s")
shader_parameter/texture_rim = ExtResource("17_gt40s")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bhexl"]
render_priority = 0
shader = SubResource("Shader_mf78y")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.01
shader_parameter/metallic_texture_channel = Vector4(1, 1, 1, 1)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.0
shader_parameter/emission = null
shader_parameter/emission_energy = null
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.1, 0.1, 0.1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("19_fvkvl")
shader_parameter/texture_metallic = ExtResource("19_fvkvl")
shader_parameter/texture_roughness = ExtResource("19_fvkvl")
shader_parameter/texture_emission = ExtResource("19_fvkvl")
shader_parameter/texture_rim = ExtResource("19_fvkvl")

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_wap6c"]
points = PackedVector3Array(6.5782, 18.2575, -79.8626, 9.46762, 20, -79.725, 9.42098, 19.9994, -79.5419, 9.18744, 17.5289, -79.6807, 8.27495, 20, -81.4677, 7.40465, 19.9988, -78.6256, 8.50384, 17.7087, -81.2361, 7.77129, 17.5714, -78.7638, 6.85678, 19.9965, -80.9601, 7.27344, 17.5361, -80.9988, 8.68385, 19.2633, -78.678, 9.23045, 18.8529, -80.8204, 6.6256, 19.9988, -79.4047, 6.8564, 17.7556, -79.2683, 7.68004, 18.3964, -81.4173, 8.91194, 17.7588, -78.9969, 8.96028, 19.9964, -81.1431, 6.85591, 17.5263, -80.4573, 9.33054, 17.7527, -80.2751, 8.27495, 20, -78.5323, 6.53234, 20, -80.275, 6.7704, 18.3978, -80.7742, 7.72496, 18.3494, -78.578, 8.95668, 17.532, -80.7743, 7.08954, 18.4889, -78.8619, 9.42098, 19.9994, -80.4581, 7.40465, 19.9988, -81.3744, 9.31958, 18.3527, -79.4085, 9.14307, 19.9964, -79.0397, 8.27504, 17.7528, -78.6695, 7.22582, 18.3978, -81.2296, 7.36034, 17.5281, -78.9489)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ag1uc"]
render_priority = 0
shader = SubResource("Shader_7c6sb")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.1
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 1.0
shader_parameter/metallic = 1.0
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(0.2, 0.2, 0.2)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("22_5al8l")
shader_parameter/texture_metallic = ExtResource("22_5al8l")
shader_parameter/texture_roughness = ExtResource("22_5al8l")
shader_parameter/texture_emission = ExtResource("22_5al8l")
shader_parameter/texture_rim = ExtResource("22_5al8l")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_y7qv2"]
albedo_color = Color(0, 0, 0, 1)

[sub_resource type="Shader" id="Shader_rp0xw"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_toon;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest,repeat_enable;
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_gray,filter_nearest,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_nearest,repeat_enable;
varying vec3 uv1_triplanar_pos;
uniform float uv1_blend_sharpness;
varying vec3 uv1_power_normal;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;


void vertex() {
	TANGENT = vec3(0.0,0.0,-1.0) * abs(NORMAL.x);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.y);
	TANGENT+= vec3(1.0,0.0,0.0) * abs(NORMAL.z);
	TANGENT = normalize(TANGENT);
	BINORMAL = vec3(0.0,1.0,0.0) * abs(NORMAL.x);
	BINORMAL+= vec3(0.0,0.0,-1.0) * abs(NORMAL.y);
	BINORMAL+= vec3(0.0,1.0,0.0) * abs(NORMAL.z);
	BINORMAL = normalize(BINORMAL);
	uv1_power_normal=pow(abs(NORMAL),vec3(uv1_blend_sharpness));
	uv1_triplanar_pos = VERTEX * uv1_scale + uv1_offset;
	uv1_power_normal/=dot(uv1_power_normal,vec3(1.0));
	uv1_triplanar_pos *= vec3(1.0,-1.0, 1.0);
}




vec4 triplanar_texture(sampler2D p_sampler,vec3 p_weights,vec3 p_triplanar_pos) {
	vec4 samp=vec4(0.0);
	samp+= texture(p_sampler,p_triplanar_pos.xy) * p_weights.z;
	samp+= texture(p_sampler,p_triplanar_pos.xz) * p_weights.y;
	samp+= texture(p_sampler,p_triplanar_pos.zy * vec2(-1.0,1.0)) * p_weights.x;
	return samp;
}


void fragment() {
	vec4 albedo_tex = triplanar_texture(texture_albedo,uv1_power_normal,uv1_triplanar_pos);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(triplanar_texture(texture_metallic,uv1_power_normal,uv1_triplanar_pos),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(0.333333,0.333333,0.333333,0.0);
	float roughness_tex = dot(triplanar_texture(texture_roughness,uv1_power_normal,uv1_triplanar_pos),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = triplanar_texture(texture_emission,uv1_power_normal,uv1_triplanar_pos).rgb;
	EMISSION = (emission.rgb*emission_tex)*emission_energy;
	vec2 rim_tex = triplanar_texture(texture_rim,uv1_power_normal,uv1_triplanar_pos).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_wtvq3"]
render_priority = 0
shader = SubResource("Shader_rp0xw")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = Vector4(1, 1, 1, 1)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.1
shader_parameter/emission = Color(1, 1, 1, 1)
shader_parameter/emission_energy = 0.0
shader_parameter/rim = 0.5
shader_parameter/rim_tint = 0.5
shader_parameter/uv1_blend_sharpness = 20.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("25_2j44i")
shader_parameter/texture_metallic = ExtResource("25_2j44i")
shader_parameter/texture_roughness = ExtResource("25_2j44i")
shader_parameter/texture_emission = ExtResource("25_2j44i")
shader_parameter/texture_rim = ExtResource("25_2j44i")

[sub_resource type="GDScript" id="GDScript_ftxei"]
script/source = "extends Decal


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	queue_free() # Replace with function body.
"

[node name="Admin corridor" type="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 8, 0, -80)
script = ExtResource("1_qhpbv")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.5, 19)
shape = SubResource("BoxShape3D_vtwrg")

[node name="CollisionShape3D_2" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 10, 0)
shape = SubResource("BoxShape3D_eqy6d")

[node name="Admin" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 0, 80)
mesh = ExtResource("3_5sss3")
surface_material_override/0 = SubResource("ShaderMaterial_f4x4h")
surface_material_override/1 = SubResource("ShaderMaterial_4odjd")
surface_material_override/2 = SubResource("ShaderMaterial_2il6s")

[node name="big door" parent="." instance=ExtResource("2_doa65")]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 10.2)
password = 2

[node name="lamps" type="Node3D" parent="."]
metadata/_edit_group_ = true
metadata/_edit_lock_ = true

[node name="SpotLight3D" type="SpotLight3D" parent="lamps"]
transform = Transform3D(-4.37114e-08, -0.819152, 0.573576, 0, 0.573576, 0.819152, -1, 3.58063e-08, -2.50718e-08, 9.5, 10, 0)
light_color = Color(1, 0.708333, 0.5, 1)
light_energy = 10.0
shadow_enabled = true
spot_range = 13.0
spot_angle = 40.0

[node name="Sprite3D" type="Sprite3D" parent="lamps/SpotLight3D"]
transform = Transform3D(1, 0, 0, 0, 1, -9.55343e-16, 0, -9.55343e-16, 1, 0, 0, 0)
cast_shadow = 2
double_sided = false
alpha_cut = 1
texture_filter = 0
texture = ExtResource("4_1mls3")
script = ExtResource("5_um2we")
use_shade = false
sprites = SubResource("Resource_qqfhg")

[node name="SpotLight3D2" type="SpotLight3D" parent="lamps"]
transform = Transform3D(-4.37114e-08, 0.819152, -0.573576, 0, 0.573576, 0.819152, 1, 3.58063e-08, -2.50718e-08, -9.5, 10, 0)
light_color = Color(1, 0.708333, 0.5, 1)
light_energy = 10.0
shadow_enabled = true
spot_range = 13.0
spot_angle = 40.0

[node name="Sprite3D" type="Sprite3D" parent="lamps/SpotLight3D2"]
transform = Transform3D(1, 0, 0, 0, 1, -9.55343e-16, 0, -9.55343e-16, 1, 0, 0, 0)
cast_shadow = 2
double_sided = false
alpha_cut = 1
texture_filter = 0
texture = ExtResource("4_1mls3")
script = ExtResource("5_um2we")
use_shade = false
sprites = SubResource("Resource_qqfhg")

[node name="SpotLight3D3" type="SpotLight3D" parent="lamps"]
transform = Transform3D(1, 0, 0, 0, 0.573576, 0.819152, 0, -0.819152, 0.573576, 0, 10, 9.5)
light_color = Color(1, 0.708333, 0.5, 1)
light_energy = 10.0
shadow_enabled = true
spot_range = 13.0
spot_angle = 40.0

[node name="Sprite3D" type="Sprite3D" parent="lamps/SpotLight3D3"]
transform = Transform3D(1, 0, 0, 0, 1, -9.55343e-16, 0, -9.55343e-16, 1, 0, 0, 0)
cast_shadow = 2
double_sided = false
alpha_cut = 1
texture_filter = 0
texture = ExtResource("4_1mls3")
script = ExtResource("5_um2we")
use_shade = false
sprites = SubResource("Resource_qqfhg")

[node name="SpotLight3D4" type="SpotLight3D" parent="lamps"]
transform = Transform3D(-1, 1.23689e-07, -8.66076e-08, 0, 0.573576, 0.819152, 1.50996e-07, 0.819152, -0.573576, 0, 10, -9.5)
light_color = Color(1, 0.708333, 0.5, 1)
light_energy = 10.0
shadow_enabled = true
spot_range = 13.0
spot_angle = 40.0

[node name="Sprite3D" type="Sprite3D" parent="lamps/SpotLight3D4"]
transform = Transform3D(1, 0, 0, 0, 1, -9.55343e-16, 0, -9.55343e-16, 1, 0, 0, 0)
cast_shadow = 2
double_sided = false
alpha_cut = 1
texture_filter = 0
texture = ExtResource("4_1mls3")
script = ExtResource("5_um2we")
use_shade = false
sprites = SubResource("Resource_qqfhg")

[node name="StaticBody3D" type="StaticBody3D" parent="."]

[node name="CollisionShape3D2" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 0, 80)
shape = SubResource("ConcavePolygonShape3D_ffqt8")

[node name="AdminPlatform" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D2"]
mesh = ExtResource("13_nu7xd")
skeleton = NodePath("../../..")
surface_material_override/0 = SubResource("ShaderMaterial_sju3c")
surface_material_override/1 = SubResource("ShaderMaterial_bhexl")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 0, 80)
shape = SubResource("ConvexPolygonShape3D_wap6c")

[node name="AdminHole" type="MeshInstance3D" parent="StaticBody3D/CollisionShape3D"]
mesh = ExtResource("13_0177v")
skeleton = NodePath("../../..")
surface_material_override/0 = SubResource("ShaderMaterial_ag1uc")
surface_material_override/1 = SubResource("StandardMaterial3D_y7qv2")

[node name="AdminPlatform2" type="MeshInstance3D" parent="StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 0, 80)
mesh = ExtResource("15_xkrp4")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_sju3c")
surface_material_override/1 = SubResource("ShaderMaterial_wtvq3")

[node name="Decal" type="Decal" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.45722, 10.0816)
visible = false
size = Vector3(2.80602, 5.034, 1)
texture_albedo = ExtResource("16_w5hai")
modulate = Color(1, 0, 0, 1)
script = SubResource("GDScript_ftxei")
